// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/


//@version=5


indicator('ADIJFX', shorttitle='ADIJFX')
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// ¬© TZack88

color bgray                         = color.rgb(128, 223, 236, 81)
color WHITE                         = color.rgb(210, 210, 210)
color RED                           = color.red
color red                           = color.rgb(128, 49, 49, 67)
color GREEN                         = color.rgb(74, 229, 79, 14)
color olive                         = color.olive
color blue                          = color.rgb(23, 43, 77)
color Yellow                        = color.rgb(255, 186, 75)
var shortCON                        = false
var longCON                         = false
string CORE                         =  "‚ûû Core Settings üî∏" 
string vis                          =  "‚ûû Visuals Settings üî∏" 

int rsiPeriod                       = 4
int bandLength                      = 34
int lengthrsipl                     = 7
int lengthtradesl                   = 2
int highlevel                       = 75
int lowlevel                        = 25





bool showlevels                     = input.string("YES", title="Show H/L Levels‚ÄÖ‚ÄÖ‚ÄÖ‚ÄÖ‚ÄÖ‚ÄÖ‚ÄÖ‚ÄÖ", options=["YES", "NO"],group = vis,inline = "02") == "YES"
color highlev                       = input.color(RED,group = vis,inline = "02",title = "")
color lowlev                        = input.color(GREEN,group = vis,inline = "02",title = "")
// bool showsma                        = input.bool(true,title = "Show SMA ‚ùì",group = vis,inline = "03")
color colsma                        = input.color(Yellow,"SMA COLOR",group = vis,inline = "03")             



src = close                                                             
r = ta.rsi(src, rsiPeriod)                                                 
ma = ta.sma(r, bandLength)                                                 
offs = (1.6185 * ta.stdev(r, bandLength))                                 
up = ma + offs                                                          
dn = ma - offs                                                          
mid = (up + dn) / 2                                                     
fastMA = ta.sma(r, lengthrsipl)                                          
slowMA = ta.sma(r, lengthtradesl)                                      

hline(showlevels ? highlevel: na,color = highlev,linewidth = 2,linestyle=hline.style_dotted)                                                                                                                      // Overbought
hline(showlevels ? lowlevel : na,color =lowlev,linewidth = 2,linestyle=hline.style_dotted)                                                              


upl = plot(up, "Upper Band", color = #3286c3, linewidth = 2)              
dnl = plot(dn, "Lower Band", color = #3286c3, linewidth = 2)               

plot(slowMA , "Slow MA", color=colsma, linewidth=1)
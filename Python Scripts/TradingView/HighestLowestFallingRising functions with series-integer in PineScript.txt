highest / lowest:
highest_(values, length) =>
	h_val = values[0]
	h_indx = 0
	if length >= 1
		for i = 0 to length-1
			if ( not na(values[i]) and values[i] > h_val  )
				h_indx := i
				h_val := values[i]
	h_val
	
lowest_(values, length) =>
	l_val = values[0]
	l_indx = 0
	if length >= 1
		for i = 0 to length-1
			if ( not na(values[i]) and values[i] < l_val )
				l_indx := i
				l_val := values[i]
	l_val

falling / rising:
rising_(values, length) =>
	current_ = values[0]
	ok_ = false
	if length>0 and length<=bar_index
	    ok_ := true
		for i = 1 to length
			if ( not na(values[i]) and current_ <= values[i] )
				ok_ := false
				break
	ok_


falling_(values, length) =>
	current_ = values[0]
	ok_ = false
	if length>0 and length<=bar_index
	    ok_ := true
		for i = 1 to length
			if ( not na(values[i]) and current_ >= values[i] )
				ok_ := false
				break
	ok_